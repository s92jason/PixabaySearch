// Generated by view binder compiler. Do not edit!
package com.jasonchen.gogolooksearch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jasonchen.gogolooksearch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewSearchResultListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageviewPic;

  @NonNull
  public final TextView textviewPageUrl;

  @NonNull
  public final TextView textviewUser;

  @NonNull
  public final TextView textviewUserTitle;

  private ViewSearchResultListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageviewPic, @NonNull TextView textviewPageUrl,
      @NonNull TextView textviewUser, @NonNull TextView textviewUserTitle) {
    this.rootView = rootView;
    this.imageviewPic = imageviewPic;
    this.textviewPageUrl = textviewPageUrl;
    this.textviewUser = textviewUser;
    this.textviewUserTitle = textviewUserTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewSearchResultListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewSearchResultListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_search_result_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewSearchResultListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageview_pic;
      ImageView imageviewPic = ViewBindings.findChildViewById(rootView, id);
      if (imageviewPic == null) {
        break missingId;
      }

      id = R.id.textview_page_url;
      TextView textviewPageUrl = ViewBindings.findChildViewById(rootView, id);
      if (textviewPageUrl == null) {
        break missingId;
      }

      id = R.id.textview_user;
      TextView textviewUser = ViewBindings.findChildViewById(rootView, id);
      if (textviewUser == null) {
        break missingId;
      }

      id = R.id.textview_user_title;
      TextView textviewUserTitle = ViewBindings.findChildViewById(rootView, id);
      if (textviewUserTitle == null) {
        break missingId;
      }

      return new ViewSearchResultListBinding((ConstraintLayout) rootView, imageviewPic,
          textviewPageUrl, textviewUser, textviewUserTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
