// Generated by Dagger (https://dagger.dev).
package com.jasonchen.gogolooksearch.view.ui;

import com.jasonchen.gogolooksearch.MyApplication;
import com.jasonchen.gogolooksearch.repository.repo.PixabayRepository;
import com.jasonchen.gogolooksearch.utils.SharedPrefUtil;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<MyApplication> applicationProvider;

  private final Provider<PixabayRepository> repositoryProvider;

  private final Provider<SharedPrefUtil> sharedPrefUtilProvider;

  public MainViewModel_Factory(Provider<MyApplication> applicationProvider,
      Provider<PixabayRepository> repositoryProvider,
      Provider<SharedPrefUtil> sharedPrefUtilProvider) {
    this.applicationProvider = applicationProvider;
    this.repositoryProvider = repositoryProvider;
    this.sharedPrefUtilProvider = sharedPrefUtilProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(applicationProvider.get(), repositoryProvider.get(), sharedPrefUtilProvider.get());
  }

  public static MainViewModel_Factory create(Provider<MyApplication> applicationProvider,
      Provider<PixabayRepository> repositoryProvider,
      Provider<SharedPrefUtil> sharedPrefUtilProvider) {
    return new MainViewModel_Factory(applicationProvider, repositoryProvider, sharedPrefUtilProvider);
  }

  public static MainViewModel newInstance(MyApplication application, PixabayRepository repository,
      SharedPrefUtil sharedPrefUtil) {
    return new MainViewModel(application, repository, sharedPrefUtil);
  }
}
