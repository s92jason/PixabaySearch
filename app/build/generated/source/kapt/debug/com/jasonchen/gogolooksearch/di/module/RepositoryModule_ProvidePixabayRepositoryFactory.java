// Generated by Dagger (https://dagger.dev).
package com.jasonchen.gogolooksearch.di.module;

import com.jasonchen.gogolooksearch.repository.PixabayService;
import com.jasonchen.gogolooksearch.repository.repo.PixabayRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvidePixabayRepositoryFactory implements Factory<PixabayRepository> {
  private final RepositoryModule module;

  private final Provider<PixabayService> serviceProvider;

  public RepositoryModule_ProvidePixabayRepositoryFactory(RepositoryModule module,
      Provider<PixabayService> serviceProvider) {
    this.module = module;
    this.serviceProvider = serviceProvider;
  }

  @Override
  public PixabayRepository get() {
    return providePixabayRepository(module, serviceProvider.get());
  }

  public static RepositoryModule_ProvidePixabayRepositoryFactory create(RepositoryModule module,
      Provider<PixabayService> serviceProvider) {
    return new RepositoryModule_ProvidePixabayRepositoryFactory(module, serviceProvider);
  }

  public static PixabayRepository providePixabayRepository(RepositoryModule instance,
      PixabayService service) {
    return Preconditions.checkNotNullFromProvides(instance.providePixabayRepository(service));
  }
}
