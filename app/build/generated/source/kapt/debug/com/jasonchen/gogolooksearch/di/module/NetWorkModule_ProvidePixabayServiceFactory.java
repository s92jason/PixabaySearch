// Generated by Dagger (https://dagger.dev).
package com.jasonchen.gogolooksearch.di.module;

import com.jasonchen.gogolooksearch.repository.PixabayService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetWorkModule_ProvidePixabayServiceFactory implements Factory<PixabayService> {
  private final NetWorkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetWorkModule_ProvidePixabayServiceFactory(NetWorkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public PixabayService get() {
    return providePixabayService(module, retrofitProvider.get());
  }

  public static NetWorkModule_ProvidePixabayServiceFactory create(NetWorkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetWorkModule_ProvidePixabayServiceFactory(module, retrofitProvider);
  }

  public static PixabayService providePixabayService(NetWorkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.providePixabayService(retrofit));
  }
}
