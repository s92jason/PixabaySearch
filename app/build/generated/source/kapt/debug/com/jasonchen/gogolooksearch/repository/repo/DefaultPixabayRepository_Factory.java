// Generated by Dagger (https://dagger.dev).
package com.jasonchen.gogolooksearch.repository.repo;

import com.jasonchen.gogolooksearch.repository.PixabayService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultPixabayRepository_Factory implements Factory<DefaultPixabayRepository> {
  private final Provider<PixabayService> serviceProvider;

  public DefaultPixabayRepository_Factory(Provider<PixabayService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public DefaultPixabayRepository get() {
    return newInstance(serviceProvider.get());
  }

  public static DefaultPixabayRepository_Factory create(Provider<PixabayService> serviceProvider) {
    return new DefaultPixabayRepository_Factory(serviceProvider);
  }

  public static DefaultPixabayRepository newInstance(PixabayService service) {
    return new DefaultPixabayRepository(service);
  }
}
